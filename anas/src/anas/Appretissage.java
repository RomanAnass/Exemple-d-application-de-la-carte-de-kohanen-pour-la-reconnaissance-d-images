/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package anas;

import anas.canvas_carré.maps_winner;
import static com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type.Int;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.image.BufferedImage;
import java.awt.image.WritableRaster;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import static java.lang.System.exit;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 *
 * @author saw
 */
public class Appretissage extends javax.swing.JFrame {

    int iter1 = 0 ;
    int  data_rows = 0 ;
    
    public Appretissage() {
        
        
        initComponents();    
                
                }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jTextField7 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenuBar3 = new javax.swing.JMenuBar();
        jMenu5 = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();
        jMenuBar4 = new javax.swing.JMenuBar();
        jMenu7 = new javax.swing.JMenu();
        jMenu8 = new javax.swing.JMenu();
        jMenuBar5 = new javax.swing.JMenuBar();
        jMenu9 = new javax.swing.JMenu();
        jMenu10 = new javax.swing.JMenu();
        jMenuBar6 = new javax.swing.JMenuBar();
        jMenu11 = new javax.swing.JMenu();
        jMenu12 = new javax.swing.JMenu();
        jPanel9 = new javax.swing.JPanel();
        jTextField9 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jComboBox2 = new javax.swing.JComboBox();
        jComboBox3 = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jSpinner1 = new javax.swing.JSpinner();
        jScrollPane2 = new javax.swing.JScrollPane();
        sort_d = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        sort_d1 = new javax.swing.JTextPane();
        jSplitPane1 = new javax.swing.JSplitPane();
        sort_d2 = new javax.swing.JScrollPane();
        sort_d3 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        sort_d4 = new javax.swing.JList();
        jButton10 = new javax.swing.JButton();
        jLabel62 = new javax.swing.JLabel();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem2 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem3 = new javax.swing.JCheckBoxMenuItem();
        jLabel60 = new javax.swing.JLabel();
        jButton12 = new javax.swing.JButton();
        app_Color = new javax.swing.JButton();
        jLabel72 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        grille = new javax.swing.JPanel();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jPanel10 = new javax.swing.JPanel();
        jButton8 = new javax.swing.JButton();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        sortie_dI = new javax.swing.JTextArea();
        jScrollPane10 = new javax.swing.JScrollPane();
        sortie_gI = new javax.swing.JTextArea();
        jScrollPane11 = new javax.swing.JScrollPane();
        vainqueur_I = new javax.swing.JTextArea();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        erreur_kI = new javax.swing.JLabel();
        iteration_kI = new javax.swing.JLabel();
        taux_aI = new javax.swing.JLabel();
        erreur_gI = new javax.swing.JLabel();
        iteration_gI = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        sortie_d = new javax.swing.JTextArea();
        jScrollPane7 = new javax.swing.JScrollPane();
        sortie_g = new javax.swing.JTextArea();
        jLabel26 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        vainqueur = new javax.swing.JTextArea();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        erreur_k = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        iteration_k = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        taux_a = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        erreur_g = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        iteration_g = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        Taille = new javax.swing.JTextField();
        iter = new javax.swing.JTextField();
        err = new javax.swing.JTextField();
        taux = new javax.swing.JTextField();
        nbr = new javax.swing.JTextField();
        file_e = new javax.swing.JTextField();
        file_s = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel37 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        classification_img = new javax.swing.JPanel();
        image_détecter = new javax.swing.JTextField();
        detcter = new javax.swing.JButton();
        Apprentissage = new javax.swing.JButton();
        Application = new javax.swing.JButton();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        Dimention_image = new javax.swing.JTextField();
        Iteration_image = new javax.swing.JTextField();
        taux_image = new javax.swing.JTextField();
        erreur_image = new javax.swing.JTextField();
        jLabel56 = new javax.swing.JLabel();
        jButton11 = new javax.swing.JButton();
        Nom_NV = new javax.swing.JTextField();
        Prenom_NV = new javax.swing.JTextField();
        Numero_NV = new javax.swing.JTextField();
        jLabel51 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jLabel69 = new javax.swing.JLabel();
        photo_NV = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        jLabel73 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        Image_Re = new javax.swing.JTextField();
        jLabel64 = new javax.swing.JLabel();
        carte_kohanen = new javax.swing.JPanel();
        jLabel65 = new javax.swing.JLabel();
        Prenom_RE = new javax.swing.JTextField();
        Numero_RE = new javax.swing.JTextField();
        jLabel66 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        jLabel70 = new javax.swing.JLabel();
        Nom_RE = new javax.swing.JTextField();
        Photo_RE = new javax.swing.JLabel();
        DessinerBox = new javax.swing.JComboBox();
        jComboBox4 = new javax.swing.JComboBox();
        photo_gener = new javax.swing.JLabel();
        Image_gener = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jLabel74 = new javax.swing.JLabel();

        jLabel7.setText("Matrice ");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        jTextField8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField8ActionPerformed(evt);
            }
        });

        jLabel1.setText("taille");

        jLabel2.setText("iteration");

        jButton2.setText("fermme");

        jButton1.setText("app");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("gross");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel3.setText("error");

        jLabel4.setText("taux dappr");

        jLabel5.setText("Data");

        jLabel6.setText("nombre neurone");

        jLabel8.setText("file");

        jLabel9.setText("Taille                              :  ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 664, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 333, Short.MAX_VALUE)
        );

        jLabel10.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel10.setText("Taille                                : ");

        jLabel11.setText("Iteration Maximale          :");

        jLabel12.setText("Erreur Moyenne              :");

        jLabel13.setText("Taux d'apprentissage     :");

        jLabel14.setText("Nombre de Neurone G    :");

        jLabel15.setText("File de donnée                :");

        jLabel16.setText("File  Sortie désiré            :");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 664, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 166, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 417, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 166, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 417, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 166, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jMenu3.setText("File");
        jMenuBar2.add(jMenu3);

        jMenu4.setText("Edit");
        jMenuBar2.add(jMenu4);

        jMenu5.setText("File");
        jMenuBar3.add(jMenu5);

        jMenu6.setText("Edit");
        jMenuBar3.add(jMenu6);

        jMenu7.setText("File");
        jMenuBar4.add(jMenu7);

        jMenu8.setText("Edit");
        jMenuBar4.add(jMenu8);

        jMenu9.setText("File");
        jMenuBar5.add(jMenu9);

        jMenu10.setText("Edit");
        jMenuBar5.add(jMenu10);

        jMenu11.setText("File");
        jMenuBar6.add(jMenu11);

        jMenu12.setText("Edit");
        jMenuBar6.add(jMenu12);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 668, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 229, Short.MAX_VALUE)
        );

        jTextField9.setText("jTextField9");

        jButton4.setText("Apprentissage");

        jLabel24.setText("jLabel24");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jCheckBox1.setText("jCheckBox1");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setText("jCheckBox2");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jScrollPane3.setViewportView(jTextPane1);

        sort_d.setColumns(20);
        sort_d.setRows(5);
        jScrollPane2.setViewportView(sort_d);

        jScrollPane4.setViewportView(sort_d1);

        sort_d4.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, sort_d4, org.jdesktop.beansbinding.ObjectProperty.create(), sort_d4, org.jdesktop.beansbinding.BeanProperty.create("elements"));
        bindingGroup.addBinding(binding);

        jScrollPane5.setViewportView(sort_d4);

        jButton10.setText("jButton10");

        jLabel62.setText("jLabel62");

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        jCheckBoxMenuItem2.setSelected(true);
        jCheckBoxMenuItem2.setText("jCheckBoxMenuItem2");

        jCheckBoxMenuItem3.setSelected(true);
        jCheckBoxMenuItem3.setText("jCheckBoxMenuItem3");

        jButton12.setText("jButton12");

        app_Color.setText("Apprentissage");
        app_Color.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                app_ColorActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N

        jPanel6.setLayout(null);

        grille.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        grille.setMinimumSize(new java.awt.Dimension(440, 420));
        grille.setPreferredSize(new java.awt.Dimension(500, 500));

        javax.swing.GroupLayout grilleLayout = new javax.swing.GroupLayout(grille);
        grille.setLayout(grilleLayout);
        grilleLayout.setHorizontalGroup(
            grilleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 448, Short.MAX_VALUE)
        );
        grilleLayout.setVerticalGroup(
            grilleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 428, Short.MAX_VALUE)
        );

        jPanel6.add(grille);
        grille.setBounds(20, 70, 450, 430);

        jCheckBox3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jCheckBox3.setText("carrée");
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });
        jPanel6.add(jCheckBox3);
        jCheckBox3.setBounds(540, 120, 130, 50);

        jCheckBox4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jCheckBox4.setText("cercle");
        jCheckBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox4ActionPerformed(evt);
            }
        });
        jPanel6.add(jCheckBox4);
        jCheckBox4.setBounds(540, 260, 300, 67);

        jCheckBox5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jCheckBox5.setText("haxagonale");
        jCheckBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox5ActionPerformed(evt);
            }
        });
        jPanel6.add(jCheckBox5);
        jCheckBox5.setBounds(540, 190, 301, 61);

        jTabbedPane1.addTab(" dessiner", jPanel6);

        jPanel10.setLayout(null);

        jButton8.setBackground(new java.awt.Color(204, 204, 204));
        jButton8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton8.setText("Afficher");
        jButton8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel10.add(jButton8);
        jButton8.setBounds(850, 700, 190, 47);

        jLabel39.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel39.setText(" LES SORTIES D'INTERPOLATION");
        jPanel10.add(jLabel39);
        jLabel39.setBounds(340, 20, 420, 56);

        jLabel40.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel40.setText("les sortie désirés");
        jPanel10.add(jLabel40);
        jLabel40.setBounds(10, 110, 320, 36);

        jLabel41.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel41.setText("les sortie Grossberg");
        jPanel10.add(jLabel41);
        jLabel41.setBounds(390, 110, 370, 36);

        jLabel42.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel42.setText("les vainqueurs");
        jPanel10.add(jLabel42);
        jLabel42.setBounds(810, 110, 270, 36);

        sortie_dI.setColumns(20);
        sortie_dI.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        sortie_dI.setRows(5);
        jScrollPane9.setViewportView(sortie_dI);

        jPanel10.add(jScrollPane9);
        jScrollPane9.setBounds(10, 166, 200, 116);

        sortie_gI.setColumns(20);
        sortie_gI.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        sortie_gI.setRows(5);
        jScrollPane10.setViewportView(sortie_gI);

        jPanel10.add(jScrollPane10);
        jScrollPane10.setBounds(440, 170, 200, 116);

        vainqueur_I.setColumns(20);
        vainqueur_I.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        vainqueur_I.setRows(5);
        jScrollPane11.setViewportView(vainqueur_I);

        jPanel10.add(jScrollPane11);
        jScrollPane11.setBounds(826, 174, 200, 116);

        jLabel43.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel43.setText("          Resultat  :");
        jPanel10.add(jLabel43);
        jLabel43.setBounds(460, 320, 380, 40);

        jLabel44.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel44.setText("Kohanen    :");
        jPanel10.add(jLabel44);
        jLabel44.setBounds(40, 350, 220, 29);

        jLabel45.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel45.setText("Erreur                            :");
        jPanel10.add(jLabel45);
        jLabel45.setBounds(100, 410, 340, 26);

        jLabel46.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel46.setText("Iteration                       :");
        jPanel10.add(jLabel46);
        jLabel46.setBounds(100, 470, 340, 26);

        jLabel47.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel47.setText("Taux d'apprentissage  :");
        jPanel10.add(jLabel47);
        jLabel47.setBounds(100, 550, 340, 22);

        jLabel48.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel48.setText("Grossberg  :");
        jPanel10.add(jLabel48);
        jLabel48.setBounds(40, 600, 240, 40);

        jLabel49.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel49.setText("Erreur                           :");
        jPanel10.add(jLabel49);
        jLabel49.setBounds(100, 660, 340, 28);

        jLabel50.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel50.setText("Iteration                      :");
        jPanel10.add(jLabel50);
        jLabel50.setBounds(100, 720, 300, 26);

        erreur_kI.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        erreur_kI.setForeground(new java.awt.Color(255, 51, 51));
        erreur_kI.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel10.add(erreur_kI);
        erreur_kI.setBounds(520, 400, 167, 26);

        iteration_kI.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        iteration_kI.setForeground(new java.awt.Color(255, 51, 51));
        iteration_kI.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel10.add(iteration_kI);
        iteration_kI.setBounds(520, 480, 167, 29);

        taux_aI.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        taux_aI.setForeground(new java.awt.Color(255, 51, 51));
        taux_aI.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel10.add(taux_aI);
        taux_aI.setBounds(520, 570, 167, 26);

        erreur_gI.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        erreur_gI.setForeground(new java.awt.Color(255, 51, 51));
        erreur_gI.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel10.add(erreur_gI);
        erreur_gI.setBounds(520, 660, 164, 28);

        iteration_gI.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        iteration_gI.setForeground(new java.awt.Color(255, 51, 51));
        iteration_gI.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel10.add(iteration_gI);
        iteration_gI.setBounds(520, 720, 164, 26);

        jLabel63.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jPanel10.add(jLabel63);
        jLabel63.setBounds(0, 0, 1130, 780);

        jTabbedPane1.addTab(" Les sortie d'interpolation", jPanel10);

        jPanel8.setLayout(null);

        jLabel25.setBackground(new java.awt.Color(255, 153, 153));
        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel25.setText("les sorties désirés ");
        jPanel8.add(jLabel25);
        jLabel25.setBounds(40, 70, 240, 29);

        jButton7.setBackground(new java.awt.Color(204, 204, 204));
        jButton7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton7.setText("Afficher");
        jButton7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel8.add(jButton7);
        jButton7.setBounds(830, 630, 200, 40);

        sortie_d.setColumns(20);
        sortie_d.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        sortie_d.setRows(5);
        jScrollPane6.setViewportView(sortie_d);

        jPanel8.add(jScrollPane6);
        jScrollPane6.setBounds(50, 110, 200, 120);

        sortie_g.setColumns(20);
        sortie_g.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        sortie_g.setRows(5);
        jScrollPane7.setViewportView(sortie_g);

        jPanel8.add(jScrollPane7);
        jScrollPane7.setBounds(490, 110, 200, 120);

        jLabel26.setBackground(new java.awt.Color(255, 153, 153));
        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel26.setText("les sorties Grossberg");
        jPanel8.add(jLabel26);
        jLabel26.setBounds(480, 70, 260, 22);

        vainqueur.setColumns(20);
        vainqueur.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        vainqueur.setRows(5);
        jScrollPane8.setViewportView(vainqueur);

        jPanel8.add(jScrollPane8);
        jScrollPane8.setBounds(860, 100, 190, 120);

        jLabel27.setBackground(new java.awt.Color(255, 153, 153));
        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel27.setText("les vaiqueurs");
        jPanel8.add(jLabel27);
        jLabel27.setBounds(880, 60, 166, 29);

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel28.setText("          Resultat   :");
        jPanel8.add(jLabel28);
        jLabel28.setBounds(470, 250, 240, 40);

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel29.setText("KOHANEN   : ");
        jPanel8.add(jLabel29);
        jLabel29.setBounds(40, 250, 290, 40);

        jLabel30.setBackground(new java.awt.Color(153, 0, 153));
        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel30.setText("Erreur                                    : ");
        jPanel8.add(jLabel30);
        jLabel30.setBounds(80, 320, 350, 27);

        erreur_k.setFont(new java.awt.Font("Agency FB", 1, 14)); // NOI18N
        erreur_k.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel8.add(erreur_k);
        erreur_k.setBounds(440, 310, 240, 40);

        jLabel31.setBackground(new java.awt.Color(153, 0, 153));
        jLabel31.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel31.setText("Iteration                               :");
        jPanel8.add(jLabel31);
        jLabel31.setBounds(80, 380, 360, 23);

        iteration_k.setFont(new java.awt.Font("Agency FB", 1, 14)); // NOI18N
        iteration_k.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel8.add(iteration_k);
        iteration_k.setBounds(440, 380, 240, 40);

        jLabel32.setBackground(new java.awt.Color(153, 0, 153));
        jLabel32.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel32.setText("Taux d'apprentissage           :");
        jPanel8.add(jLabel32);
        jLabel32.setBounds(80, 450, 350, 29);

        taux_a.setFont(new java.awt.Font("Agency FB", 1, 14)); // NOI18N
        taux_a.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel8.add(taux_a);
        taux_a.setBounds(440, 450, 240, 40);

        jLabel33.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel33.setText("GROSSBERG  :");
        jPanel8.add(jLabel33);
        jLabel33.setBounds(30, 510, 290, 27);

        jLabel34.setBackground(new java.awt.Color(51, 255, 0));
        jLabel34.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel34.setText("Erreur                                    :");
        jPanel8.add(jLabel34);
        jLabel34.setBounds(80, 570, 350, 28);

        erreur_g.setFont(new java.awt.Font("Agency FB", 1, 14)); // NOI18N
        erreur_g.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel8.add(erreur_g);
        erreur_g.setBounds(440, 560, 240, 40);

        jLabel35.setBackground(new java.awt.Color(51, 255, 0));
        jLabel35.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel35.setText("Iteration                                :");
        jPanel8.add(jLabel35);
        jLabel35.setBounds(80, 630, 350, 30);
        jPanel8.add(jLabel36);
        jLabel36.setBounds(349, 814, 188, 0);

        iteration_g.setFont(new java.awt.Font("Agency FB", 1, 14)); // NOI18N
        iteration_g.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel8.add(iteration_g);
        iteration_g.setBounds(440, 630, 240, 40);

        jLabel38.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel38.setText(" LES SORTIES D'ACCREDITATION");
        jPanel8.add(jLabel38);
        jLabel38.setBounds(380, 20, 430, 40);

        jLabel59.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel59.setForeground(new java.awt.Color(255, 51, 51));
        jPanel8.add(jLabel59);
        jLabel59.setBounds(-20, -50, 1150, 780);

        jTabbedPane1.addTab(" Les sorties d'accréditaion", jPanel8);

        jPanel5.setLayout(null);

        jLabel17.setBackground(new java.awt.Color(0, 0, 204));
        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel17.setText("Taille                                           :");
        jLabel17.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel5.add(jLabel17);
        jLabel17.setBounds(90, 160, 280, 37);

        jLabel18.setBackground(new java.awt.Color(0, 0, 204));
        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel18.setText("Iteration Maximale                 :");
        jLabel18.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel5.add(jLabel18);
        jLabel18.setBounds(90, 240, 280, 40);

        jLabel19.setBackground(new java.awt.Color(0, 0, 204));
        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel19.setText("Erreur Maximale                      :");
        jLabel19.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel5.add(jLabel19);
        jLabel19.setBounds(90, 320, 280, 41);

        jLabel20.setBackground(new java.awt.Color(0, 0, 204));
        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel20.setText("Taux d'apprentissage            :");
        jLabel20.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel5.add(jLabel20);
        jLabel20.setBounds(90, 400, 280, 42);

        jLabel21.setBackground(new java.awt.Color(0, 0, 204));
        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel21.setText("Nombre de Neurones           : ");
        jLabel21.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel5.add(jLabel21);
        jLabel21.setBounds(90, 480, 280, 43);

        jLabel22.setBackground(new java.awt.Color(0, 0, 204));
        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel22.setText("File les entrée                        :");
        jLabel22.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel5.add(jLabel22);
        jLabel22.setBounds(90, 560, 280, 40);

        jLabel23.setBackground(new java.awt.Color(0, 0, 204));
        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel23.setText("File sortie désiré                    :");
        jLabel23.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel5.add(jLabel23);
        jLabel23.setBounds(90, 640, 280, 36);

        Taille.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Taille.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TailleActionPerformed(evt);
            }
        });
        jPanel5.add(Taille);
        Taille.setBounds(450, 160, 201, 37);

        iter.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jPanel5.add(iter);
        iter.setBounds(450, 240, 201, 40);

        err.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        err.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                errActionPerformed(evt);
            }
        });
        jPanel5.add(err);
        err.setBounds(450, 320, 201, 41);

        taux.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        taux.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tauxActionPerformed(evt);
            }
        });
        jPanel5.add(taux);
        taux.setBounds(450, 400, 201, 42);

        nbr.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jPanel5.add(nbr);
        nbr.setBounds(450, 480, 201, 43);

        file_e.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jPanel5.add(file_e);
        file_e.setBounds(450, 560, 201, 40);

        file_s.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        file_s.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                file_sActionPerformed(evt);
            }
        });
        jPanel5.add(file_s);
        file_s.setBounds(450, 640, 201, 44);

        jButton5.setBackground(new java.awt.Color(204, 204, 204));
        jButton5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton5.setText("Apprentissage_accreditation");
        jButton5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton5);
        jButton5.setBounds(710, 350, 270, 60);

        jButton6.setBackground(new java.awt.Color(204, 204, 204));
        jButton6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton6.setText("Vider");
        jButton6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton6);
        jButton6.setBounds(710, 450, 270, 50);

        jLabel37.setBackground(new java.awt.Color(0, 0, 0));
        jLabel37.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel37.setText("     Rétro-Propagation");
        jPanel5.add(jLabel37);
        jLabel37.setBounds(350, 20, 320, 70);
        jPanel5.add(jLabel58);
        jLabel58.setBounds(0, -20, 1120, 800);

        jTabbedPane1.addTab("Rétro-propagation", jPanel5);

        classification_img.setLayout(null);

        image_détecter.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        image_détecter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                image_détecterActionPerformed(evt);
            }
        });
        classification_img.add(image_détecter);
        image_détecter.setBounds(280, 110, 280, 44);

        detcter.setBackground(new java.awt.Color(204, 204, 204));
        detcter.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        detcter.setText("Image");
        detcter.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        detcter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detcterActionPerformed(evt);
            }
        });
        classification_img.add(detcter);
        detcter.setBounds(40, 200, 150, 40);

        Apprentissage.setBackground(new java.awt.Color(204, 204, 204));
        Apprentissage.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Apprentissage.setText("Apprentissage");
        Apprentissage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Apprentissage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ApprentissageActionPerformed(evt);
            }
        });
        classification_img.add(Apprentissage);
        Apprentissage.setBounds(690, 420, 250, 40);

        Application.setBackground(new java.awt.Color(204, 204, 204));
        Application.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Application.setForeground(new java.awt.Color(51, 51, 51));
        Application.setText("Nouveau Condidat");
        Application.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Application.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ApplicationActionPerformed(evt);
            }
        });
        classification_img.add(Application);
        Application.setBounds(690, 530, 250, 40);

        jLabel52.setBackground(new java.awt.Color(0, 0, 0));
        jLabel52.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel52.setText("Taille                                     : ");
        jLabel52.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        classification_img.add(jLabel52);
        jLabel52.setBounds(30, 360, 260, 31);

        jLabel53.setBackground(new java.awt.Color(0, 0, 0));
        jLabel53.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel53.setText("Iteration                              :");
        jLabel53.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        classification_img.add(jLabel53);
        jLabel53.setBounds(29, 438, 260, 30);

        jLabel54.setBackground(new java.awt.Color(0, 0, 0));
        jLabel54.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel54.setText("Taux d'apprentissage       : ");
        jLabel54.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        classification_img.add(jLabel54);
        jLabel54.setBounds(29, 513, 260, 30);

        jLabel55.setBackground(new java.awt.Color(0, 0, 0));
        jLabel55.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel55.setText("Erreur                                  : ");
        jLabel55.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        classification_img.add(jLabel55);
        jLabel55.setBounds(29, 587, 260, 30);

        Dimention_image.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Dimention_image.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Dimention_imageActionPerformed(evt);
            }
        });
        classification_img.add(Dimention_image);
        Dimention_image.setBounds(330, 360, 241, 40);

        Iteration_image.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Iteration_image.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Iteration_imageActionPerformed(evt);
            }
        });
        classification_img.add(Iteration_image);
        Iteration_image.setBounds(330, 430, 241, 40);

        taux_image.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        classification_img.add(taux_image);
        taux_image.setBounds(330, 510, 241, 40);

        erreur_image.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        erreur_image.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                erreur_imageActionPerformed(evt);
            }
        });
        classification_img.add(erreur_image);
        erreur_image.setBounds(330, 580, 241, 40);

        jLabel56.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel56.setText("       La Carte de Kohanen   ");
        classification_img.add(jLabel56);
        jLabel56.setBounds(320, 20, 360, 69);

        jButton11.setBackground(new java.awt.Color(204, 204, 204));
        jButton11.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton11.setText("Vider");
        jButton11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        classification_img.add(jButton11);
        jButton11.setBounds(40, 260, 150, 40);

        Nom_NV.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        classification_img.add(Nom_NV);
        Nom_NV.setBounds(950, 120, 160, 40);

        Prenom_NV.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        classification_img.add(Prenom_NV);
        Prenom_NV.setBounds(950, 190, 160, 40);

        Numero_NV.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Numero_NV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Numero_NVActionPerformed(evt);
            }
        });
        classification_img.add(Numero_NV);
        Numero_NV.setBounds(950, 260, 160, 40);

        jLabel51.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel51.setText("Nom                    :");
        jLabel51.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        classification_img.add(jLabel51);
        jLabel51.setBounds(700, 120, 210, 40);

        jLabel57.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel57.setText("Prenom              :");
        jLabel57.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        classification_img.add(jLabel57);
        jLabel57.setBounds(700, 190, 210, 40);

        jLabel69.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel69.setText("N.d'inscription  :");
        jLabel69.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        classification_img.add(jLabel69);
        jLabel69.setBounds(700, 260, 210, 40);

        photo_NV.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        classification_img.add(photo_NV);
        photo_NV.setBounds(350, 170, 170, 170);

        jLabel71.setBackground(new java.awt.Color(0, 0, 0));
        jLabel71.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel71.setText("         Chemin");
        jLabel71.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        classification_img.add(jLabel71);
        jLabel71.setBounds(40, 110, 150, 40);

        jLabel73.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        classification_img.add(jLabel73);
        jLabel73.setBounds(40, -120, 1100, 780);

        jTabbedPane1.addTab("Apprentissage_kohanen", classification_img);

        jPanel11.setLayout(null);

        Image_Re.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Image_Re.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Image_ReActionPerformed(evt);
            }
        });
        jPanel11.add(Image_Re);
        Image_Re.setBounds(290, 20, 266, 42);

        jLabel64.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel64.setText("Chemin                 :");
        jLabel64.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel11.add(jLabel64);
        jLabel64.setBounds(20, 20, 150, 42);

        carte_kohanen.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        carte_kohanen.setPreferredSize(new java.awt.Dimension(50, 420));
        carte_kohanen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                carte_kohanenMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                carte_kohanenMouseEntered(evt);
            }
        });

        javax.swing.GroupLayout carte_kohanenLayout = new javax.swing.GroupLayout(carte_kohanen);
        carte_kohanen.setLayout(carte_kohanenLayout);
        carte_kohanenLayout.setHorizontalGroup(
            carte_kohanenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 439, Short.MAX_VALUE)
        );
        carte_kohanenLayout.setVerticalGroup(
            carte_kohanenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 418, Short.MAX_VALUE)
        );

        jPanel11.add(carte_kohanen);
        carte_kohanen.setBounds(640, 100, 441, 420);

        jLabel65.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel65.setText(" La carte de kohanen ");
        jLabel65.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel11.add(jLabel65);
        jLabel65.setBounds(720, 40, 261, 36);

        Prenom_RE.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel11.add(Prenom_RE);
        Prenom_RE.setBounds(390, 340, 205, 42);

        Numero_RE.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Numero_RE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Numero_REActionPerformed(evt);
            }
        });
        jPanel11.add(Numero_RE);
        Numero_RE.setBounds(390, 410, 205, 43);

        jLabel66.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel66.setText("Nom                   : ");
        jLabel66.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel11.add(jLabel66);
        jLabel66.setBounds(30, 280, 278, 42);

        jLabel67.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel67.setText("Prenom              :");
        jLabel67.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel11.add(jLabel67);
        jLabel67.setBounds(30, 340, 278, 41);

        jLabel68.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel68.setText("N.d'inscription  :");
        jLabel68.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel11.add(jLabel68);
        jLabel68.setBounds(30, 410, 278, 41);

        jLabel70.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel70.setText("PHOTO              :");
        jLabel70.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel11.add(jLabel70);
        jLabel70.setBounds(30, 490, 278, 46);

        Nom_RE.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Nom_RE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Nom_REActionPerformed(evt);
            }
        });
        jPanel11.add(Nom_RE);
        Nom_RE.setBounds(390, 280, 205, 43);

        Photo_RE.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel11.add(Photo_RE);
        Photo_RE.setBounds(410, 480, 171, 170);

        DessinerBox.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        DessinerBox.setMaximumRowCount(3);
        DessinerBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Carré", "Cercle", "Hexagonale" }));
        DessinerBox.setToolTipText("");
        DessinerBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DessinerBoxActionPerformed(evt);
            }
        });
        jPanel11.add(DessinerBox);
        DessinerBox.setBounds(640, 530, 240, 44);

        jComboBox4.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Reconnaissance_CA", "Reconnaissance_CE", "Reconnaissance_HE" }));
        jComboBox4.setName(""); // NOI18N
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });
        jPanel11.add(jComboBox4);
        jComboBox4.setBounds(30, 560, 166, 44);

        photo_gener.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel11.add(photo_gener);
        photo_gener.setBounds(290, 90, 168, 150);

        Image_gener.setBackground(new java.awt.Color(204, 204, 204));
        Image_gener.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        Image_gener.setText("Image");
        Image_gener.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Image_gener.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Image_generActionPerformed(evt);
            }
        });
        jPanel11.add(Image_gener);
        Image_gener.setBounds(20, 100, 151, 38);

        jButton13.setBackground(new java.awt.Color(204, 204, 204));
        jButton13.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jButton13.setText("Vider");
        jButton13.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        jPanel11.add(jButton13);
        jButton13.setBounds(20, 160, 151, 37);
        jPanel11.add(jLabel74);
        jLabel74.setBounds(0, 0, 1090, 770);

        jTabbedPane1.addTab(" Reconnaissance d'imges", jPanel11);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1099, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 22, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 803, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed


    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField8ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

        Grossberg g = new Grossberg();

        int iteration = 0, taille = 0, nombre_neurone;

        double erreur = 0, taux = 0;

        String f1, f2;

        taille = Integer.valueOf(this.Taille.getText());
        iteration = Integer.valueOf(this.iter.getText());
        erreur = Double.valueOf(this.err.getText());
        taux = Double.valueOf(this.taux.getText());
        f1 = this.file_e.getText();
        f2 = this.file_s.getText();
        nombre_neurone = Integer.valueOf(this.nbr.getText());
        //   M = this.jTextField7.getText();
        try {
            g.Train(nombre_neurone, taille, iteration, erreur, taux, f1, f2);
        } catch (IOException ex) {
            Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton5ActionPerformed

    private void tauxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tauxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tauxActionPerformed

    private void errActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_errActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_errActionPerformed

    private void TailleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TailleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TailleActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed

        int a = Integer.valueOf(this.Taille.getText());

        this.grille.removeAll();

        try {
            canvas_carée2 cca = new canvas_carée2(a);
            cca.setBackground(Color.WHITE);
            cca.setSize(500, 500);
            this.grille.add(cca);

        } catch (IOException ex) {
            Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox4ActionPerformed
        //cercle 
        int a = Integer.valueOf(this.Taille.getText());

        this.grille.removeAll();

        try {
            canvas_cercle cc = new canvas_cercle(a);
            cc.setBackground(Color.WHITE);
            cc.setSize(552, 552);
            this.grille.add(cc);

        } catch (IOException ex) {
            Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jCheckBox4ActionPerformed

    private void jCheckBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox5ActionPerformed

        int a = Integer.valueOf(this.Taille.getText());

        this.grille.removeAll();

        try {
            canvas_hexagonale ch = new canvas_hexagonale(a);
            ch.setBackground(Color.WHITE);
            ch.setSize(552, 552);
            this.grille.add(ch);

        } catch (IOException ex) {
            Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jCheckBox5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed

        int a = Integer.valueOf(this.nbr.getText());

        double yd[] = new double[a];

        double y[] = new double[a];

        int m_rows = 0, a_cols = 0, m1_rows = 0, m3_rows = 0, a3_cols = 0, data1_rows = 0, data1_cols = 0, data2_rows = 0, data2_cols = 0, data3_rows = 0, data3_cols = 0;

        int vect[] = new int[256];

        String ligne;

        StringTokenizer str;

        BufferedReader sortie_data1 = null, sortie_data2 = null, sortie_data3 = null, sortie_data4 = null;

        double res[] = new double[4];

        int t = 0;

        try {

            sortie_data1 = new BufferedReader(new FileReader("sortie_d.txt"));
            sortie_data2 = new BufferedReader(new FileReader("sortie_gross.txt"));
            sortie_data3 = new BufferedReader(new FileReader("data.txt"));
            sortie_data4 = new BufferedReader(new FileReader("resultat.txt"));

        } catch (FileNotFoundException ex) {
            Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, ex);
        }

        m_rows = 0;

        try {

            while ((ligne = sortie_data1.readLine()) != null) {

                str = new StringTokenizer(ligne);

                while (str.hasMoreTokens()) {

                    yd[m_rows] = Double.valueOf(str.nextToken()).doubleValue();

                }

                m_rows++;
                data1_rows = m_rows;

            }
        } catch (IOException ex) {
            Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, ex);
        }

        m1_rows = 0;

        try {
            while ((ligne = sortie_data2.readLine()) != null) {

                str = new StringTokenizer(ligne);

                while (str.hasMoreTokens()) {

                    y[m1_rows] = Double.valueOf(str.nextToken()).doubleValue();

                }

                m1_rows++;
                data2_rows = m_rows;

            }
        } catch (IOException ex) {
            Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {

            while ((ligne = sortie_data3.readLine()) != null) {

                str = new StringTokenizer(ligne);

                while (str.hasMoreTokens()) {

                    vect[a3_cols] = Integer.valueOf(str.nextToken()).intValue();
                    a3_cols++;
                    data3_cols = a_cols;

                }

               // m3_rows++ ;
                //data3_rows = m3_rows ;
            }

        } catch (IOException ex) {
            Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {

            while ((ligne = sortie_data4.readLine()) != null) {

                str = new StringTokenizer(ligne);

                while (str.hasMoreTokens()) {

                    res[t] = Double.valueOf(str.nextToken()).doubleValue();

                }
                t++;

            }

        } catch (IOException ex) {
            Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, ex);
        }

        String l1, l2, l3;

        for (int i = 0; i < data1_rows; i++) {

            l1 = Double.toString(yd[i]);
            l2 = Double.toString(y[i]);
            this.sortie_d.append(l1 + "\n");
            this.sortie_g.append(l2 + "\n");

        }

        for (int j = 0; j < a3_cols; j += 2) {

            l3 = Integer.toString(vect[j]);

            this.vainqueur.append(l3 + "\t");

            l3 = Integer.toString(vect[j + 1]);

            this.vainqueur.append(l3 + "\n");

        }

        this.iteration_k.setText(Double.toString(res[2]));
        this.erreur_k.setText(Double.toString(res[0]));
        this.taux_a.setText(Double.toString(res[1]));
        this.erreur_g.setText(Double.toString(res[3]));
        this.iteration_g.setText(Double.toString(res[2]));

    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed

               // interpolation :
        int a = Integer.valueOf(this.nbr.getText());

        double yd[] = new double[a];

        double y[] = new double[a];

        int m_rows = 0, a_cols = 0, m1_rows = 0, m3_rows = 0, a3_cols = 0, data1_rows = 0, data1_cols = 0, data2_rows = 0, data2_cols = 0, data3_rows = 0, data3_cols = 0;

        int vect[] = new int[256];

        String ligne;

        StringTokenizer str;

        BufferedReader sortie_data1 = null, sortie_data2 = null, sortie_data3 = null, sortie_data4 = null;

        double res[] = new double[4];

        int t = 0;

        try {

            sortie_data1 = new BufferedReader(new FileReader("sortie_d.txt"));
            sortie_data2 = new BufferedReader(new FileReader("sortie_grossI.txt"));
            sortie_data3 = new BufferedReader(new FileReader("data.txt"));
            sortie_data4 = new BufferedReader(new FileReader("resultatI.txt"));

        } catch (FileNotFoundException ex) {
            Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, ex);
        }

        m_rows = 0;

        try {

            while ((ligne = sortie_data1.readLine()) != null) {

                str = new StringTokenizer(ligne);

                while (str.hasMoreTokens()) {

                    yd[m_rows] = Double.valueOf(str.nextToken()).doubleValue();

                }

                m_rows++;
                data1_rows = m_rows;

            }
        } catch (IOException ex) {
            Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, ex);
        }

        m1_rows = 0;

        try {
            while ((ligne = sortie_data2.readLine()) != null) {

                str = new StringTokenizer(ligne);

                while (str.hasMoreTokens()) {

                    y[m1_rows] = Double.valueOf(str.nextToken()).doubleValue();

                }

                m1_rows++;
                data2_rows = m_rows;

            }
        } catch (IOException ex) {
            Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {

            while ((ligne = sortie_data3.readLine()) != null) {

                str = new StringTokenizer(ligne);

                while (str.hasMoreTokens()) {

                    vect[a3_cols] = Integer.valueOf(str.nextToken()).intValue();
                    a3_cols++;
                    data3_cols = a_cols;

                }

               // m3_rows++ ;
                //data3_rows = m3_rows ;
            }

        } catch (IOException ex) {
            Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {

            while ((ligne = sortie_data4.readLine()) != null) {

                str = new StringTokenizer(ligne);

                while (str.hasMoreTokens()) {

                    res[t] = Double.valueOf(str.nextToken()).doubleValue();

                }
                t++;

            }

        } catch (IOException ex) {
            Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, ex);
        }

        String l1, l2, l3;

        for (int i = 0; i < data1_rows; i++) {

            l1 = Double.toString(yd[i]);
            l2 = Double.toString(y[i]);
            this.sortie_dI.append(l1 + "\n");
            this.sortie_gI.append(l2 + "\n");

        }

        for (int j = 0; j < a3_cols; j += 2) {

            l3 = Integer.toString(vect[j]);

            this.vainqueur_I.append(l3 + "\t");

            l3 = Integer.toString(vect[j + 1]);

            this.vainqueur_I.append(l3 + "\n");

        }

        this.iteration_kI.setText(Double.toString(res[2]));
        this.erreur_kI.setText(Double.toString(res[0]));
        this.taux_aI.setText(Double.toString(res[1]));
        this.erreur_gI.setText(Double.toString(res[3]));
        this.iteration_gI.setText(Double.toString(res[2]));


    }//GEN-LAST:event_jButton8ActionPerformed
   
    
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        
        Taille.setText("");
        iter.setText("");
        err.setText("");
        taux.setText("");
        nbr.setText("");
        file_e.setText("");
        file_s.setText("");
        
        
    }//GEN-LAST:event_jButton6ActionPerformed

    private void file_sActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_file_sActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_file_sActionPerformed

    private void erreur_imageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_erreur_imageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_erreur_imageActionPerformed

    private void Iteration_imageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Iteration_imageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Iteration_imageActionPerformed

    private void Dimention_imageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Dimention_imageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Dimention_imageActionPerformed

    
     public void Normalisation(double[][]mat){
        
        for(int i=0;i<mat.length;i++){
            double som=0;
           for(int j=0;j<mat[i].length;j++){
         som+=Math.pow(mat[i][j],2);
           }
          
          for(int j=0;j<mat[i].length;j++){
           mat[i][j]=mat[i][j]/Math.sqrt(som);        }
        }
           
       
       }
    
    
    private void ApplicationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ApplicationActionPerformed

        File f;

        PrintWriter out1 = null , out2 = null , out4 = null;

        BufferedImage image;

        Maps som = new Maps();
        
       

        int n = 1 ;

        String Imag = image_détecter.getText();

        int Width = 170, Height = 170;

        int colonne = 170 * 170 * 3, dimMap = Integer.valueOf(this.Dimention_image.getText()), max = Integer.valueOf(this.Iteration_image.getText());;

        double er = Double.valueOf(this.erreur_image.getText()), tau = Double.valueOf(this.taux_image.getText());

        File f1 = new File("Don3.txt");
       
        double Img[][] = new double[1][170*170*3];
        
        int t = 0 ;
        
        BufferedReader data = null , data1 = null ;
        StringTokenizer str;
        String ligne;
        int a_cols = 0, m_rows = 0, data_rows = 0, data_cols = 0;
        int b = 0 , r = 0 ;
        String S = "Can't read input file!";
        String S1 = null ;
        
        double don[][] = null  ;


                f = new File(Imag+".png");

        try {
            
            som.Creat_Map(colonne, f1, dimMap, max, er, tau);
            image = ImageIO.read(f);
            
             Width = image.getWidth();
             Height = image.getHeight();
             
               for (int j = 0; j < Width; j++) {

                        for (int k = 0; k < Height; k++) {

                            Color c1 = new Color(image.getRGB(j, k));

                            Img[0][t] = c1.getRed();
                            Img[0][t + 1] = c1.getGreen();
                            Img[0][t + 2] = c1.getBlue();
                            

                            t = t + 3;

                        }// fin k ;

                    }// fin j ;
        }catch(IOException ex){
            
           // Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, ex);
            S1 = ex.getMessage();
        }//fin catch
        
        if(S == S1)
              
            JOptionPane.showMessageDialog(null,"le chemin est incorrecte");
       
        else{
            
        JOptionPane.showMessageDialog(null,"le chemin est correcte");    
            
         t = 0 ;
        
         try(FileWriter fw = new FileWriter("pixel.txt",true);BufferedWriter bw = new BufferedWriter(fw) ; PrintWriter out = new PrintWriter(bw)){
           
              for (int j = 0; j < Width; j++) {

                        for (int k = 0; k < Height; k++) {
     
                                    
                        out.print(Img[0][t]+" "+Img[0][t + 1]+" "+Img[0][t + 2]+" ");
                        t = t + 3;

                        }// fin k ;

                    }// fin j ;
            
        }catch(IOException e){
            
            
            
        }
         
        try(FileWriter fw = new FileWriter("information.txt",true);BufferedWriter bw = new BufferedWriter(fw) ; PrintWriter out = new PrintWriter(bw)){
           
             out.print(Nom_NV.getText()+" "+Prenom_NV.getText()+" "+Numero_NV.getText());
           
            
        }catch(IOException e){
            
         
        } 
        
        
        Normalisation(Img);
       
       try {
                data = new BufferedReader(new FileReader("Nombre.txt"));
                
            } catch (FileNotFoundException Ex) {
                Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, Ex);
            }
            try{
                while ((ligne = data.readLine()) != null) {

                    str = new StringTokenizer(ligne);

                    a_cols = 0 ;

                    while (str.hasMoreTokens()) {

                        r  =(int) Double.valueOf(str.nextToken()).doubleValue();

                        a_cols++;

                    }

                    m_rows++;

                }
            }catch(IOException Ex) {
                
                Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, Ex);
                
            }
            
           don = new double[r+1][170*170*3]; 
            
             try {
             
           //   System.out.println("m_rows = "+m_rows);
                data1 = new BufferedReader(new FileReader("donée.txt"));
                 m_rows = 0 ;
            } catch (FileNotFoundException eX) {
                Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, eX);
            }
             
            try {
                while ((ligne = data1.readLine()) != null) {

                    str = new StringTokenizer(ligne);

                    a_cols = 0 ;

                    while (str.hasMoreTokens()) {

                        don[m_rows][a_cols] = Double.valueOf(str.nextToken()).doubleValue();
                    //    System.out.println(don[m_rows][a_cols]);

                        a_cols++;
                        
                      //  System.out.println("a_cols = "+a_cols);
                    }
                    
                 System.out.println("m_rows = "+m_rows);
                    m_rows++ ;

                }
                
            } catch (IOException eX) {
                Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, eX);
            }
            
            
            
           System.out.println("m_rows = "+m_rows);
         t = 0 ;
        
         try(FileWriter fw = new FileWriter("donée.txt",true);BufferedWriter bw = new BufferedWriter(fw) ; PrintWriter out = new PrintWriter(bw)){
           
              for (int j = 0; j < Width; j++) {

                        for (int k = 0; k < Height; k++) {
     
                                    
                        out.print(Img[0][t]+" "+Img[0][t + 1]+" "+Img[0][t + 2]+" ");
                        t = t + 3;

                        }// fin k ;

                    }// fin j ;
            
        }catch(IOException E){
            
                       
            
        }    
             
           
        for(int i = 0 ; i < 170*170*3 ; i++ ){
              
              don[2][i] = Img[0][i] ;
              
        }
        
        
        try {
            som.Train_classification_Im(don,r+1,colonne);
            
             out2 = new PrintWriter(new FileWriter("poids_f.txt"),true);
            
            for(int i  = 0 ; i < r+1 ; i++){
                
                //out2.println("ligne"+i);
                
                t = 0 ;
                
                 for(int x = 0 ; x < 170 ; x++){
                     
                for(int y = 0 ; y < 170 ; y++){
                    
                    //out2.print(som.ner[i].Weight_of_Node[t]+" "+som.ner[i].Weight_of_Node[t+1]+" "+som.ner[i].Weight_of_Node[t+2]+" ");
                    out2.print(som.ner[i].Weight_of_Node[t]+" "+som.ner[i].Weight_of_Node[t+1]+" "+som.ner[i].Weight_of_Node[t+2]+" ");
                    t+=3;
                }
                
                
            }
                 out2.println();
            
                  }
            
        } catch (IOException exx) {
            Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, exx);
        }
        
         try {
            out2 = new PrintWriter(new FileWriter("Nombre.txt"),true);
            out2.println(r+1);
        } catch (IOException Exx) {
            Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, Exx);
        }
       
         
        }//fin else
        
     
        
    }//GEN-LAST:event_ApplicationActionPerformed

    
    private void ApprentissageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ApprentissageActionPerformed

        File f;

        PrintWriter out1 = null, out2 = null;

        BufferedImage image;

        Maps som = new Maps();

        int n = 2 ;

        int Width = 170, Height = 170;

        int colonne = 170 * 170 * 3 , dimMap = Integer.valueOf(this.Dimention_image.getText()), max = Integer.valueOf(this.Iteration_image.getText());;

        double er = Double.valueOf(this.erreur_image.getText()), tau = Double.valueOf(this.taux_image.getText());

        File f1 = new File("Don3.txt");
        
        double Img[][] = new double[n][170*170*3];

        

        try {
            som.Creat_Map(colonne, f1, dimMap, max, er, tau);
           
        } catch (IOException ex) {
            Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {    
            out2 = new PrintWriter(new FileWriter("pixel.txt"),true);
        } catch (IOException ex) {
            Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, ex);
        }
        
            for (int i = 1; i <= n ; i++) {

               int t = 0 ;

            try {
                
                f = new File("output" + i + ".png");
                
                image = ImageIO.read(f);
                Width = image.getWidth();
                Height = image.getHeight();
                
                // out2.println("ligne"+i);
                for (int j = 0 ; j < Width ; j++) {

                    for (int k = 0 ; k < Height ; k++) {

                        Color c1 = new Color(image.getRGB(j, k));

                     /*   c.Img[i - 1][t] = c1.getRed();
                        c.Img[i - 1][t + 1] = c1.getGreen();
                        c.Img[i - 1][t + 2] = c1.getBlue();
                        c.data[i - 1][t] = c1.getRed();
                        c.data[i - 1][t + 1] = c1.getGreen();
                        c.data[i - 1][t + 2] = c1.getBlue();*/
                     
                     Img[i-1][t] = c1.getRed();
                     Img[i-1][t+1] = c1.getGreen();
                     Img[i-1][t+2] = c1.getBlue();
                    
                    out2.print(Img[i-1][t]+" "+Img[i-1][t+1]+" "+Img[i-1][t+2]+" ");
                  
                        
                       
                       t+=3 ;
                    }// fin k ;
                    
                    

                }// fin j ;

            out2.println();
                 
                
            }catch(IOException ex){
                Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, ex);
            }
                
            }//fin i ;s


    
        try {
            
            som.Train_classification(Img , n , 170 * 170 * 3);
            
            out2 = new PrintWriter(new FileWriter("poids_f.txt"),true);
            
            for(int i  = 0 ; i < n ; i++){
                
              //  out2.println("ligne"+i);
                
                int t = 0 ;
                
                 for(int x = 0 ; x < 170 ; x++){
                for(int y = 0 ; y < 170 ; y++){
                    
                    out2.print(som.ner[i].Weight_of_Node[t]+" "+som.ner[i].Weight_of_Node[t+1]+" "+som.ner[i].Weight_of_Node[t+2]+" ");
                    t+=3;
                }
                
                
            }
                 
            out2.println();
            
                  }
            
        } catch (IOException ex) {
            Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, ex);
        }
                
           
    PrintWriter out;     
        try {
            out = new PrintWriter(new FileWriter("information.txT"),true);
            out.println("Anass Roman SMI0030/14"); 
            out.println("younesse bentayeb SMI0015/30"); 
        } catch (IOException ex) {
            Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        int a = 2 ;
         try {
            out2 = new PrintWriter(new FileWriter("Nombre.txt"),true);
            out2.println(a);
        } catch (IOException Exx) {
            Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, Exx);
        } 
    
           
                   

       
       
      
    }//GEN-LAST:event_ApprentissageActionPerformed

    private void detcterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detcterActionPerformed

        BufferedImage image = null;
        int Width = 0, Height = 0;
        String img = image_détecter.getText();
        File f = new File( img + ".png");
            int t = 0;
            BufferedReader data= null;
            StringTokenizer str;
            String ligne;
            int a_cols = 0, m_rows = 0, data_rows = 0, data_cols = 0;
            int b = 0 , r = 0 ;
            BufferedReader data1 = null ;
            int n = 0 ;
            String S = "Can't read input file!";        
            String S1 = null ;
        try {
            image = ImageIO.read(f);
            
        } catch (IOException ex) {
            
            S1 = ex.getMessage() ; 
        
           // Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, ex);
      
    }
        
        if(S == S1)
              
            JOptionPane.showMessageDialog(null,"le chemain est incorrecte");
       
             else{
                 
                JOptionPane.showMessageDialog(null,"le chemain est correcte");
                 photo_NV.setIcon(new ImageIcon(image));
                 
             }

    
    }//GEN-LAST:event_detcterActionPerformed

    private void image_détecterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_image_détecterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_image_détecterActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
          
         Numero_RE.setText("");
         Nom_RE.setText("");
         Prenom_RE.setText("");
         Image_Re.setText("");
        
               
        
    }//GEN-LAST:event_jButton11ActionPerformed

    private void app_ColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_app_ColorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_app_ColorActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed

        Nom_RE.setText("");
        Prenom_RE.setText("");
        Numero_RE.setText("");
        Image_Re.setText("");

    }//GEN-LAST:event_jButton13ActionPerformed

    private void Image_generActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Image_generActionPerformed

        BufferedImage image = null;
        int Width = 0, Height = 0;
        String img = Image_Re.getText();
        File f = new File(img+".png");
        int t = 0;
        BufferedReader data= null;
        StringTokenizer str;
        String ligne;
        int a_cols = 0, m_rows = 0, data_rows = 0, data_cols = 0;
        int b = 0 , r = 0 ;
        BufferedReader data1 = null ;
        int n = 0 ;
        String S = "Can't read input file!";
        String S1 = null ;
        try {
            image = ImageIO.read(f);

        } catch (IOException ex) {

            S1 = ex.getMessage() ;

            // Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, ex);

        }

        if(S == S1)

        JOptionPane.showMessageDialog(null,"le chemain est incorrecte");

        else{
            JOptionPane.showMessageDialog(null,"le chemain est correcte");
            photo_gener.setIcon(new ImageIcon(image));

        }

    }//GEN-LAST:event_Image_generActionPerformed

    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed

        String valueSelected = jComboBox4.getSelectedItem().toString();
        System.out.println(valueSelected);
        PrintWriter out1 = null ;
        BufferedReader data1 = null ;
        Maps som = new Maps();
        File f;
        StringTokenizer str;
        String ligne;
        double data[][] = new double[1][170*170*3];
        String Imag = Image_Re.getText();
        int t = 0 ;
        int a_cols = 0, m_rows = 0, data_cols = 0;
        double vainqueur[][] = new double[50][2];//static
        String info[][] = new String[50][3];//static
        double Pho[][] = new double[50][170*170*3];// static
        double data2[][] = new double[1][170*170*3];
        double Image[][] = new double[50][170*170*3];
        double K[] = new double[170*170*3];
        BufferedImage image ;
        int Width , Height ;
        String inf1[] = new String[3];
        String S = "Can't read input file!";
        String S1 = null ;

        try {
            m_rows = 0 ;
            data1 = new BufferedReader(new FileReader("pixel.txt"));
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            while ((ligne = data1.readLine()) != null) {

                //System.out.println("m_rows = "+m_rows);

                str = new StringTokenizer(ligne);

                a_cols = 0 ;

                while(str.hasMoreTokens()) {

                    Image[m_rows][a_cols] = Double.valueOf(str.nextToken()).doubleValue();
                    //   System.out.println(don[m_rows][a_cols]);

                    a_cols++;

                    // System.out.println("a_cols = "+a_cols);
                }

                m_rows++ ;
                data_rows = m_rows ;
                System.out.println("data_rows "+data_rows);
            }

        }catch (IOException ex) {
            Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, ex);
        }

        System.out.println("data_rows = "+data_rows);

        try {
            m_rows = 0 ;
            data1 = new BufferedReader(new FileReader("poids_f.txt"));
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            while ((ligne = data1.readLine()) != null) {

                str = new StringTokenizer(ligne);

                a_cols = 0 ;

                while (str.hasMoreTokens()) {

                    //System.out.println(str.nextToken());
                    Pho[m_rows][a_cols] = Double.valueOf(str.nextToken()).doubleValue();
                    //  System.out.println(Pho[m_rows][a_cols]);

                    a_cols++;

                    //  System.out.println("a_cols = "+a_cols);
                }

                m_rows++ ;
                //System.out.println("a_cols = "+m_rows);

            }

        } catch (IOException ex) {
            Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, ex);
        }
        //   System.out.println(Pho[0][2]);

        m_rows = 0 ;

        try {
            data1 = new BufferedReader(new FileReader("information.txt"));
        }catch (FileNotFoundException ex) {
            Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, ex);

        }

        try{
            while ((ligne = data1.readLine()) != null) {

                str = new StringTokenizer(ligne);

                a_cols = 0 ;

                while(str.hasMoreTokens()) {

                    info[m_rows][a_cols] = str.nextToken();
                    //  System.out.println(info[m_rows][a_cols]);

                    a_cols++ ;
                    System.out.println("a_cols = "+a_cols);

                }

                System.out.println("m_rows = "+m_rows);
                m_rows++ ;

            }

        }catch (IOException ex) {
            Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, ex);
        }

        f = new File(Imag+".png");

        try {

            image = ImageIO.read(f);

            Width = image.getWidth();
            Height = image.getHeight();

            for (int j = 0; j < Width; j++) {

                for (int k = 0; k < Height; k++) {

                    Color c1 = new Color(image.getRGB(j, k));

                    data[0][t] = c1.getRed();
                    data[0][t + 1] = c1.getGreen();
                    data[0][t + 2] = c1.getBlue();

                    t = t + 3 ;

                }// fin k ;

            }// fin j ;
        }catch(IOException ex) {

            // Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, ex);
            //ajouter une instruction
            S1 = ex.getMessage();

        }

        try {

            iter1 = som.appretissage(data);
            System.out.println(" iter1 = "+iter1);
        }catch (IOException ex) {
            Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, ex);
        }

        for(int i  = 0 ; i < data_rows ; i++ ){

            if(i == iter1){
                System.out.println(info[i][0]);
                System.out.println(info[i][1]);
                System.out.println(info[i][2]);
                inf1[0] = info[i][0];
                inf1[1] = info[i][1];
                inf1[2] = info[i][2];

            }

        }

        try {
            m_rows = 0 ;
            data1 = new BufferedReader(new FileReader("Boxdata.txt"));

        } catch (FileNotFoundException ex) {

            Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, ex);

        }

        try{

            while ((ligne = data1.readLine()) != null) {

                str = new StringTokenizer(ligne);

                a_cols = 0 ;

                while (str.hasMoreTokens()) {

                    vainqueur[m_rows][a_cols] = Double.valueOf(str.nextToken()).doubleValue();
                    //    System.out.println(don[m_rows][a_cols]);

                    a_cols++;

                    //  System.out.println("a_cols = "+a_cols);
                }

                m_rows++ ;

            }

        }catch (IOException ex) {
            Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            out1 = new PrintWriter(new FileWriter("generalisation.txt"),true);

            for(int i = 0 ; i < data_rows ; i++){

                if(i == iter1){

                    out1.println(vainqueur[i][0]+" "+vainqueur[i][1]);

                }

            }

        } catch (IOException ex) {
            Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, ex);
        }

        if(S == S1)

        JOptionPane.showMessageDialog(null,"le chemin est incorrecte");

        else{

            JOptionPane.showMessageDialog(null,"le chemin est correcte");

            if( "Reconnaissance_CA" == valueSelected){

                int a = Integer.valueOf(this.Dimention_image.getText());

                this.carte_kohanen.removeAll();

                try {

                    BoxCarré cca = new BoxCarré(a);
                    cca.setBackground(Color.WHITE);
                    cca.setSize(440, 420);
                    this.carte_kohanen.add(cca);
                    cca.addMouseListener(new MouseListener() {

                        @Override
                        public void mouseClicked(MouseEvent e) {

                            int couleur[] = new int[170*170*3];
                            int I , J ;
                            int x = e.getX();
                            int y = e.getY();
                            System.out.println(" x = "+x+" y = "+y);
                            int x1 = 0 , x2 = 44 ;
                            int y1 = 0 , y2 = 42 ;
                            double som1  = 0 ;

                            for(int i = 0 ; i < 10 ; i ++){

                                //System.out.println("i = "+i);

                                x1 = 0 ; x2 = 44 ;

                                for(int j = 0 ; j < 10 ; j++ ){

                                    // System.out.println("j = "+j);

                                    if((x1<= x && x <= x2 ) && (y1 <= y && y <= y2)){
                                        System.out.println("x1 ="+x1+" x2 =  "+x2);
                                        for(int k1 = 0 ; k1 <  data_rows  ; k1++  ){

                                            System.out.println("k1 =  "+k1);

                                            if(k1 == iter1){

                                                // System.out.println("iter1 = "+iter1+" k1 = "+k1);

                                                for(int k2 = 0 ; k2 < 170*170*3 ; k2++){

                                                    data2[0][k2] = Image[k1][k2];
                                                    // System.out.println("data = "+data2[0][k2]);

                                                    K[k2] = Pho[k1][k2];
                                                    //  System.out.println(K[k2]);

                                                }

                                            }

                                        }

                                    }

                                    x1=x2  ;
                                    x2+=44 ;

                                }
                                y1 = y2 ;
                                y2+= 42 ;

                            }

                            som1 =  calcule(data2);
                            System.out.println("calcule = "+ calcule(data2));
                            System.out.println("som1 = "+som1);
                            couleur = pixel(som1,K);
                            int c[] = new int[3] ;
                            int t = 0 ;
                            int width = 170, height = 170;
                            BufferedImage image1 = new BufferedImage(width ,height,BufferedImage.TYPE_INT_RGB) ;
                            WritableRaster raster = image1.getRaster();

                            for( I = 0 ; I < width ; I++ ){

                                for( J = 0 ; J < height ; J++){

                                    for(int m = 0 ; m < 3 ; m++ ){

                                        c[m] = couleur[t];
                                        // System.out.print(couleur[m]+" ");
                                        // System.out.print(c[m]+" ");
                                        t++ ;

                                    }
                                    //  System.out.println(" ");
                                    raster.setPixel(I, J, c);

                                }

                            }

                            Photo_RE.setIcon(new ImageIcon(image1));
                            Prenom_RE.setText(inf1[0]);
                            Nom_RE.setText(inf1[1]);
                            Numero_RE.setText(inf1[2]);
                        }

                        @Override
                        public void mousePressed(MouseEvent e) {

                        }

                        @Override
                        public void mouseReleased(MouseEvent e) {

                        }

                        @Override
                        public void mouseEntered(MouseEvent e) {

                        }

                        @Override
                        public void mouseExited(MouseEvent e) {

                        }
                    });

                } catch (IOException ex) {
                    Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, ex);
                }

            }else if("Reconnaissance_CE" == valueSelected){

                int a = Integer.valueOf(this.Dimention_image.getText());

                this.carte_kohanen.removeAll();

                try {
                    Box_Cercle  cce = new Box_Cercle(a);
                    cce.setBackground(Color.WHITE);
                    cce.setSize(440, 420);
                    this.carte_kohanen.add(cce);
                    cce.addMouseListener(new MouseListener() {

                        @Override
                        public void mouseClicked(MouseEvent e) {

                            int couleur[] = new int[170*170*3];//static
                            int I , J ;
                            int x = e.getX();
                            int y = e.getY();

                            int x1 = 0 , x2 = 44 ;
                            int y1 = 0 , y2 = 42 ;
                            int som1  = 0 ;

                            for(int i = 0 ; i < 10 ; i ++){

                                x1 = 0 ; x2 = 44 ;

                                for(int j = 0 ; j < 10 ; j++ ){

                                    if((x1<= x && x <= x2 ) && (y1 <= y && y <= y2)){

                                        for(int k1 = 0 ; k1 < data_rows ; k1++  ){

                                            if(k1 == iter1){

                                                for(int k2 = 0 ; k2 < 170*170*3 ; k2++){

                                                    data2[0][k2] = Image[k1][k2];
                                                    K[k2] = Pho[k1][k2];

                                                }

                                            }

                                        }

                                    }

                                    x1=x2  ;
                                    x2+=44 ;

                                }

                                y1 = y2 ;
                                y2+= 42 ;
                            }

                            som1 = (int) calcule(data2);
                            couleur = pixel(som1,K);
                            int c[] = new int[3] ;
                            int t = 0 ;
                            int width = 170, height = 170;
                            BufferedImage image1 = new BufferedImage(width ,height,BufferedImage.TYPE_INT_RGB) ;
                            WritableRaster raster = image1.getRaster();

                            for( I = 0 ; I < width ; I++ ){

                                for( J = 0 ; J < height ; J++){

                                    for(int m = 0 ; m < 3 ; m++ ){

                                        c[m] = couleur[t];
                                        t++ ;

                                    }

                                    raster.setPixel(I, J, c);

                                }

                            }
                            Photo_RE.setIcon(new ImageIcon(image1));
                            Prenom_RE.setText(inf1[0]);
                            Nom_RE.setText(inf1[1]);
                            Numero_RE.setText(inf1[2]);
                        }

                        @Override
                        public void mousePressed(MouseEvent e) {

                        }

                        @Override
                        public void mouseReleased(MouseEvent e) {

                        }

                        @Override
                        public void mouseEntered(MouseEvent e) {

                        }

                        @Override
                        public void mouseExited(MouseEvent e) {

                        }
                    });

                } catch (IOException ex) {
                    Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, ex);
                }

            }  else{

                int a = Integer.valueOf(this.Dimention_image.getText());

                this.carte_kohanen.removeAll();

                try {

                    BoxHexagonale  che = new BoxHexagonale(a);

                    che.setBackground(Color.WHITE);
                    che.setSize(440, 420);
                    this.carte_kohanen.add(che);
                    che.addMouseListener(new MouseListener() {

                        @Override
                        public void mouseClicked(MouseEvent e) {

                            int couleur[] = new int[170*170*3];
                            int x = e.getX();
                            int y = e.getY();
                            int I , J ;

                            int x1 = 0 , x2 = 44 ;
                            int y1 = 0 , y2 = 42 ;
                            int som1  = 0 ;

                            for(int i = 0 ; i < 10 ; i ++){

                                x1 = 0 ; x2 = 44 ;

                                for(int j = 0 ; j < 10 ; j++ ){

                                    if((x1<= x && x <= x2 ) && (y1 <= y && y <= y2)){

                                        for(int k1 = 0 ; k1 < data_rows ; k1++  ){

                                            if(k1 == iter1){

                                                for(int k2 = 0 ; k2 < 170*170*3 ; k2++){

                                                    data2[0][k2] = Image[k1][k2];
                                                    K[k2] = Pho[k1][k2];

                                                }

                                            }

                                        }

                                    }

                                    x1=x2  ;
                                    x2+=44 ;

                                }
                                y1 = y2 ;
                                y2+= 42 ;

                            }

                            som1 = (int) calcule(data2);
                            couleur = pixel(som1,K);
                            int c[] = new int[3] ;
                            int t = 0 ;
                            int width = 170, height = 170 ;
                            BufferedImage image1 = new BufferedImage(width ,height,BufferedImage.TYPE_INT_RGB) ;
                            WritableRaster raster = image1.getRaster();

                            for( I = 0 ; I < width ; I++ ){

                                for( J = 0 ; J < height ; J++){

                                    for(int m = 0 ; m < 3 ; m++ ){

                                        c[m] = couleur[t];
                                        t++ ;

                                    }

                                    raster.setPixel(I, J, c);

                                }

                            }

                            Photo_RE.setIcon(new ImageIcon(image1));
                            Prenom_RE.setText(inf1[0]);
                            Nom_RE.setText(inf1[1]);
                            Numero_RE.setText(inf1[2]);
                        }

                        @Override
                        public void mousePressed(MouseEvent e) {

                        }

                        @Override
                        public void mouseReleased(MouseEvent e) {

                        }

                        @Override
                        public void mouseEntered(MouseEvent e) {

                        }

                        @Override
                        public void mouseExited(MouseEvent e) {

                        }
                    });

                } catch (IOException ex) {
                    Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, ex);
                }

            }

        }

    }//GEN-LAST:event_jComboBox4ActionPerformed

    private void DessinerBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DessinerBoxActionPerformed

        String valueSelected = DessinerBox.getSelectedItem().toString();
        int a_cols = 0, m_rows = 0, data_rows = 0, data_cols = 0;
        StringTokenizer str;
        String ligne;
        // String info[][] = new String[2][3];
        // double Pho[][] = new double[2][50*50*3];
        BufferedReader data1 = null ;
        double vainqueur[] = {11,11};
        PrintWriter out1 = null ;

        try {
            out1 = new PrintWriter(new FileWriter("generalisation.txt"),true);
            out1.println(vainqueur[0]+" "+vainqueur[1]);

        } catch (IOException ex) {
            Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, ex);
        }

        if( "Cercle" == valueSelected){

            int a = Integer.valueOf(this.Dimention_image.getText());

            this.carte_kohanen.removeAll();

            try {
                Box_Cercle cce = new Box_Cercle(a);
                cce.setBackground(Color.WHITE);
                cce.setSize(440,420);
                this.carte_kohanen.add(cce);
                cce.addMouseListener(new MouseListener() {

                    @Override
                    public void mouseClicked(MouseEvent e) {

                        int x = e.getX();
                        int y = e.getY();

                        System.out.println("X = "+x+" Y = "+y);
                    }

                    @Override
                    public void mousePressed(MouseEvent e) {

                    }

                    @Override
                    public void mouseReleased(MouseEvent e) {

                    }

                    @Override
                    public void mouseEntered(MouseEvent e) {

                    }

                    @Override
                    public void mouseExited(MouseEvent e) {

                    }
                });

            } catch (IOException ex) {
                Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, ex);
            }

        }else if("Carré" == valueSelected){

            int a = Integer.valueOf(this.Dimention_image.getText());

            this.carte_kohanen.removeAll();

            try {
                BoxCarré cca = new BoxCarré(a);
                cca.setBackground(Color.WHITE);
                cca.setSize(440, 420);
                this.carte_kohanen.add(cca);
                cca.addMouseListener(new MouseListener() {

                    @Override
                    public void mouseClicked(MouseEvent e) {

                        int x = e.getX();
                        int y = e.getY();

                        System.out.println("X = "+x+" Y = "+y);
                    }

                    @Override
                    public void mousePressed(MouseEvent e) {

                    }

                    @Override
                    public void mouseReleased(MouseEvent e) {

                    }

                    @Override
                    public void mouseEntered(MouseEvent e) {

                    }

                    @Override
                    public void mouseExited(MouseEvent e) {

                    }
                });

            } catch (IOException ex){
                Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, ex);
            }

        }else{

            int a = Integer.valueOf(this.Dimention_image.getText());

            this.carte_kohanen.removeAll();

            try {
                BoxHexagonale che = new BoxHexagonale(a);
                che.setBackground(Color.WHITE);
                che.setSize(440, 420);
                this.carte_kohanen.add(che);
                che.addMouseListener(new MouseListener() {

                    @Override
                    public void mouseClicked(MouseEvent e) {

                        int x = e.getX();
                        int y = e.getY();

                        System.out.println("X = "+x+" Y = "+y);
                    }

                    @Override
                    public void mousePressed(MouseEvent e) {

                    }

                    @Override
                    public void mouseReleased(MouseEvent e) {

                    }

                    @Override
                    public void mouseEntered(MouseEvent e) {

                    }

                    @Override
                    public void mouseExited(MouseEvent e) {

                    }
                });

            } catch (IOException ex){
                Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

    }//GEN-LAST:event_DessinerBoxActionPerformed

    private void Nom_REActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Nom_REActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Nom_REActionPerformed

    private void Numero_REActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Numero_REActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Numero_REActionPerformed

    private void carte_kohanenMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_carte_kohanenMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_carte_kohanenMouseEntered

    private void carte_kohanenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_carte_kohanenMouseClicked

        int a_cols = 0, m_rows = 0, data_rows = 0, data_cols = 0;
        StringTokenizer str;
        String ligne;
        String info[][] = new String[2][3];//static
        double Pho[][] = new double[2][50*50*3];// static
        double data2[][] = new double[1][50*50*3];
        double Image[][] = new double[2][50*50*3];
        BufferedReader data1 = null ;

        try {
            data1 = new BufferedReader(new FileReader("poids_f.txt"));
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            while ((ligne = data1.readLine()) != null) {

                str = new StringTokenizer(ligne);

                a_cols = 0 ;

                while (str.hasMoreTokens()) {

                    Pho[m_rows][a_cols] = Double.valueOf(str.nextToken()).doubleValue();
                    //    System.out.println(don[m_rows][a_cols]);

                    a_cols++;

                    //  System.out.println("a_cols = "+a_cols);
                }

                m_rows++ ;

            }

        } catch (IOException ex) {
            Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            m_rows = 0 ;
            data1 = new BufferedReader(new FileReader("pixel.txt"));
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            while ((ligne = data1.readLine()) != null) {

                str = new StringTokenizer(ligne);

                a_cols = 0 ;

                while (str.hasMoreTokens()) {

                    Image[m_rows][a_cols] = Double.valueOf(str.nextToken()).doubleValue();
                    //    System.out.println(don[m_rows][a_cols]);

                    a_cols++;

                    //  System.out.println("a_cols = "+a_cols);
                }

                m_rows++ ;

            }

        } catch (IOException ex) {
            Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, ex);
        }

        m_rows = 0 ;

        try {
            data1 = new BufferedReader(new FileReader("information.txt"));
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, ex);
        }

        try{
            while ((ligne = data1.readLine()) != null) {

                str = new StringTokenizer(ligne);

                a_cols = 0 ;

                while (str.hasMoreTokens()) {

                    info[m_rows][a_cols] = str.nextToken();
                    //    System.out.println(don[m_rows][a_cols]);

                    a_cols++;

                    //  System.out.println("a_cols = "+a_cols);
                }

                m_rows++ ;

            }

        }catch (IOException ex) {
            Logger.getLogger(Appretissage.class.getName()).log(Level.SEVERE, null, ex);
        }

        int x = evt.getX();
        int y = evt.getY();
        System.out.println("x = "+x+" y = "+y);

        int x1 = 0 , x2 = 44 ;
        int y1 = 0 , y2 = 42 ;
        int som  = 0 ;

        for(int i = 0 ; i < 10 ; i ++){

            x1 = 0 ; x2 = 44 ;

            for(int j = 0 ; j < 10 ; j++ ){

                if((x1<= x && x <= x2 ) && (y1 <= y && y <= y2)){

                    for(int k1 = 0 ; k1 < 2 ; k1++  ){

                        if(k1 == iter1){

                            for(int k2 = 0 ; k2 < 50*50*3 ; k2++){

                                data2[0][k2] = Image[k1][k2];

                            }

                        }

                    }

                }

                x1=x2  ;
                x2+=44 ;

            }

            y1 = y2 ;
            y2+= 42 ;

        }

        som = (int) calcule(data2);

    }//GEN-LAST:event_carte_kohanenMouseClicked

    private void Image_ReActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Image_ReActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Image_ReActionPerformed

    private void Numero_NVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Numero_NVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Numero_NVActionPerformed

   
    public double calcule(double data[][]){
        
        double som  = 0; 
        
        for(int i = 0 ; i < data.length ; i++){
            
            for(int j = 0 ; j < data[i].length ; j++){
                
                som+=Math.pow(data[i][j],2);
                
                
            }
        }
        
        return Math.sqrt(som);
        
    }
    
    
    public int[] pixel(double SP , double k[]){
       
       int p[] = new int[k.length];
       
       for(int i = 0 ;i < p.length ; i++ ){
           
           p[i] = (int) (SP*k[i]);
           
       }
       
       return p ;
   }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Appretissage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Appretissage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Appretissage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Appretissage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Appretissage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Application;
    private javax.swing.JButton Apprentissage;
    private javax.swing.JComboBox DessinerBox;
    private javax.swing.JTextField Dimention_image;
    private javax.swing.JTextField Image_Re;
    private javax.swing.JButton Image_gener;
    private javax.swing.JTextField Iteration_image;
    private javax.swing.JTextField Nom_NV;
    private javax.swing.JTextField Nom_RE;
    private javax.swing.JTextField Numero_NV;
    private javax.swing.JTextField Numero_RE;
    private javax.swing.JLabel Photo_RE;
    private javax.swing.JTextField Prenom_NV;
    private javax.swing.JTextField Prenom_RE;
    private javax.swing.JTextField Taille;
    private javax.swing.JButton app_Color;
    private javax.swing.JPanel carte_kohanen;
    private javax.swing.JPanel classification_img;
    private javax.swing.JButton detcter;
    private javax.swing.JTextField err;
    private javax.swing.JLabel erreur_g;
    private javax.swing.JLabel erreur_gI;
    private javax.swing.JTextField erreur_image;
    private javax.swing.JLabel erreur_k;
    private javax.swing.JLabel erreur_kI;
    private javax.swing.JTextField file_e;
    private javax.swing.JTextField file_s;
    private javax.swing.JPanel grille;
    private javax.swing.JTextField image_détecter;
    private javax.swing.JTextField iter;
    private javax.swing.JLabel iteration_g;
    private javax.swing.JLabel iteration_gI;
    private javax.swing.JLabel iteration_k;
    private javax.swing.JLabel iteration_kI;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem2;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem3;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu10;
    private javax.swing.JMenu jMenu11;
    private javax.swing.JMenu jMenu12;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenu jMenu9;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuBar jMenuBar3;
    private javax.swing.JMenuBar jMenuBar4;
    private javax.swing.JMenuBar jMenuBar5;
    private javax.swing.JMenuBar jMenuBar6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTextField nbr;
    private javax.swing.JLabel photo_NV;
    private javax.swing.JLabel photo_gener;
    private javax.swing.JTextArea sort_d;
    private javax.swing.JTextPane sort_d1;
    private javax.swing.JScrollPane sort_d2;
    private javax.swing.JLabel sort_d3;
    private javax.swing.JList sort_d4;
    private javax.swing.JTextArea sortie_d;
    private javax.swing.JTextArea sortie_dI;
    private javax.swing.JTextArea sortie_g;
    private javax.swing.JTextArea sortie_gI;
    private javax.swing.JTextField taux;
    private javax.swing.JLabel taux_a;
    private javax.swing.JLabel taux_aI;
    private javax.swing.JTextField taux_image;
    private javax.swing.JTextArea vainqueur;
    private javax.swing.JTextArea vainqueur_I;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}

class classification_images extends JPanel {

    // hauteur et largeur de l'image
    static int Width, Height;

//tableau des coordonnées des couleurs des images 
    static double Img[][];

//tableau des coordonnées des couleurs des images 
    static double data[][];

// nombre des images
    static int N;

    static int b = 0;

    Maps SOM;

    BufferedImage image;

    int colonne;

    JLabel l;

    PrintWriter out , out1  ;

    static int n ;
    
   

    public classification_images(int n, Maps som, int Width, int Height) {

        this.n = n;
        this.SOM = som;
        this.Width = Width;
        this.Height = Height;
        image = new BufferedImage(Width, Height, BufferedImage.TYPE_INT_RGB);
        System.out.println("dddddddddddddddd");
        

        // l= new JLabel(new ImageIcon(image));
    }// fin constructor

    public double calcule(double data[]) {

        double som = 0;

        for (int i = 0; i < data.length; i++) {

            som += Math.pow(data[i], 2);

        }

        return Math.sqrt(som);

    }

    public int[] pixel(double SP, double k[]) {

        int p[] = new int[k.length];

        for (int i = 0; i < p.length; i++) {

            p[i] = (int) (SP * k[i]);

        }

        return p;
    }

    public void draw(Graphics g) throws IOException {

        super.paint(g);
        
        

        double S;

        int couleur[] = new int[200 * 200 * 3];

        Graphics2D g2 = (Graphics2D) g;

        g.setColor(Color.WHITE);

        WritableRaster raster = image.getRaster();

        int j = 50, k = 50, r = 0;
        
        Color C;

        double d[] = new double[200 * 200 * 3];

        double d1[] = new double[200 * 200 * 3];

        for (int i = 0; i < n ; i++) {

            

          //  for (int s = 0; s < 200 * 200 * 3; s++) {

             //   d[s] = data[i][s];
              //  d1[s] = SOM.ner1[i].Weight_of_Node[s];

            //}

           // S = calcule(d);
            //couleur = pixel(S, d1);
            
            try(FileWriter fw = new FileWriter("couleurF.txt",true);BufferedWriter bw = new BufferedWriter(fw) ; PrintWriter out = new PrintWriter(bw)){
                
                
                out.println("ligne"+i);
             

            int t = 0;
             
           // out.println("ligne"+(i+1));
            for (int x = 0; x < Width; x++) {

                for (int y = 0; y < Height ; y++) {

                    out.print(SOM.ner1[i].Weight_of_Node[t] + " " + SOM.ner1[i].Weight_of_Node[t+1] + " " + SOM.ner1[i].Weight_of_Node[t+2]+" ");
                    // System.out.println(couleur[t]+" "+couleur[t+1]+" "+couleur[t+2]);
                    t += 3 ;
                    
                }

            }
            
            out.println();
            
            }catch(IOException e){
                
                
                
            }
            
            // out.println(c);
           //dessination de l'image 
          /* int c[] = new int[3];
           int t = 0 ;
           
           for(int x = 0 ; x < Width ; x++ ){
               
               for(int y = 0 ; y < Height ; y++){
                 
                    for(int m = 0 ; m < 3 ; m++ ){
               
                      c[m] = couleur[t]; 
                      t++ ;
               
           }
                    
                    raster.setPixel(x, y, c);
                   
                   
               }
               
               
           } 
       
      
          g.drawImage(image,j,k , this);
          r++ ;
          j+=80 ;
          if(r == 3 ){
              
              r = 0 ;
              j = 50 ;
              k+= 80 ; 
              
              
          }*/
        }

    }
}


class application extends JPanel{
    
     // hauteur et largeur de l'image
    static int Width, Height;

//tableau des coordonnées des couleurs des images 
    static double Img[][];

//tableau des coordonnées des couleurs des images 
    static double data[][];

// nombre des images
    static int N;

    static int b = 0;

    Maps SOM;

    BufferedImage image;

    int colonne;

    JLabel l;

    PrintWriter out , out1 , out2 ;
    
    BufferedReader data1;
    StringTokenizer str;
    String ligne;

    static int n ;
    
      int a_cols = 0, m_rows = 0 ; 
    
     public application( Maps som, int Width, int Height) throws FileNotFoundException, IOException {
       

        this.SOM = som ;
        this.Width = Width;
        this.Height = Height;
        image = new BufferedImage(Width, Height, BufferedImage.TYPE_INT_RGB);
        System.out.println("dddddddddddddddd");
         data1 = new BufferedReader(new FileReader("Nombre.txt"));
         
          while ((ligne = data1.readLine()) != null) {

                    str = new StringTokenizer(ligne);

                    a_cols = 0 ;

                    while (str.hasMoreTokens()) {

                    n  =(int) Double.valueOf(str.nextToken()).doubleValue();
                      
                        a_cols++;

                    }
                     
                    m_rows++;

                }
          
           out1 = new PrintWriter(new FileWriter("Nombre.txt"), true);
            int a = n + 1 ;
            out1.println(a);
            
           

        // l= new JLabel(new ImageIcon(image));
    }// fin constructor
    
public double calcule(double data[]) {

        double som = 0;

        for (int i = 0; i < data.length; i++) {

            som += Math.pow(data[i], 2);

        }

        return Math.sqrt(som);

    }

    public int[] pixel(double SP, double k[]) {

        int p[] = new int[k.length];

        for (int i = 0; i < p.length; i++) {

            p[i] = (int) (SP * k[i]);

        }

        return p;
    }    
     
    
    public void draw(Graphics g) throws IOException {

        super.paint(g);
        
        

        double S;

        int couleur[] = new int[200 * 200 * 3];

        Graphics2D g2 = (Graphics2D) g;

        g.setColor(Color.WHITE);

        WritableRaster raster = image.getRaster();

        int j = 50, k = 50, r = 0;
        Color C;

        double d[] = new double[200 * 200 * 3];

        double d1[] = new double[200 * 200 * 3];
        
        



            try {
                
                out = new PrintWriter(new FileWriter("couleur" + (n+1) + ".txt"), true);
                

            } catch (IOException ex) {
                Logger.getLogger(Image.class.getName()).log(Level.SEVERE, null, ex);
            }

            for (int s = 0; s < 200 * 200 * 3; s++) {

                d[s] = data[0][s];
                d1[s] = SOM.ner1[0].Weight_of_Node[s];

            }

            S = calcule(d);
            couleur = pixel(S, d1);

            int t = 0;
             
           // out.println("ligne"+(i+1));
            for (int x = 0; x < Width; x++) {

                for (int y = 0; y < Height ; y++) {

                    out.println(couleur[t] + " " + couleur[t + 1] + " " + couleur[t + 2]);
                    // System.out.println(couleur[t]+" "+couleur[t+1]+" "+couleur[t+2]);
                    t += 3 ;
                    
                }

            }

    
    
}
        
    }
    
